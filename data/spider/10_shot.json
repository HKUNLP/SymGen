{"query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "question": "List the type of bed and name of all traditional rooms.", "db_id": "inn_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Rooms", "Reservations"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "column_name": ["*", "RoomId", "roomName", "beds", "bedType", "maxOccupancy", "basePrice", "decor", "Code", "Room", "CheckIn", "CheckOut", "Rate", "LastName", "FirstName", "Adults", "Kids"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "number", "text", "number", "text", "text", "text", "number", "text", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8]}, "db_foreign_keys": {"column_id": [9], "other_column_id": [1]}}
{"query": "SELECT name FROM scientists ORDER BY name", "question": "List the names of all scientists sorted in alphabetical order.", "db_id": "scientist_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Scientists", "Projects", "AssignedTo"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2], "column_name": ["*", "SSN", "Name", "Code", "Name", "Hours", "Scientist", "Project"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 3, 6]}, "db_foreign_keys": {"column_id": [7, 6], "other_column_id": [3, 1]}}
{"query": "SELECT name FROM playlists;", "question": "What are the names of all the playlists?", "db_id": "store_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["artists", "sqlite_sequence", "albums", "employees", "customers", "genres", "invoices", "media_types", "tracks", "invoice_lines", "playlists", "playlist_tracks"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 11, 11], "column_name": ["*", "id", "name", "name", "seq", "id", "title", "artist_id", "id", "last_name", "first_name", "title", "reports_to", "birth_date", "hire_date", "address", "city", "state", "country", "postal_code", "phone", "fax", "email", "id", "first_name", "last_name", "company", "address", "city", "state", "country", "postal_code", "phone", "fax", "email", "support_rep_id", "id", "name", "id", "customer_id", "invoice_date", "billing_address", "billing_city", "billing_state", "billing_country", "billing_postal_code", "total", "id", "name", "id", "name", "album_id", "media_type_id", "genre_id", "composer", "milliseconds", "bytes", "unit_price", "id", "invoice_id", "track_id", "unit_price", "quantity", "id", "name", "playlist_id", "track_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "text", "text", "number", "time", "time", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number", "time", "text", "text", "text", "text", "text", "number", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number", "number", "number", "number", "number", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 8, 23, 36, 38, 47, 49, 58, 63, 65]}, "db_foreign_keys": {"column_id": [7, 12, 35, 39, 52, 53, 51, 60, 59, 66, 65], "other_column_id": [1, 8, 8, 23, 47, 36, 5, 49, 38, 49, 63]}}
{"query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "question": "Return the name of the document that has the most sections.", "db_id": "document_management", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Roles", "Users", "Document_Structures", "Functional_Areas", "Images", "Documents", "Document_Functional_Areas", "Document_Sections", "Document_Sections_Images"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 7, 7, 7, 7, 7, 8, 8], "column_name": ["*", "role_code", "role_description", "user_id", "role_code", "user_name", "user_login", "password", "document_structure_code", "parent_document_structure_code", "document_structure_description", "functional_area_code", "parent_functional_area_code", "functional_area_description", "image_id", "image_alt_text", "image_name", "image_url", "document_code", "document_structure_code", "document_type_code", "access_count", "document_name", "document_code", "functional_area_code", "section_id", "document_code", "section_sequence", "section_code", "section_title", "section_id", "image_id"]}, "db_column_types": ["text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "number", "text", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 8, 11, 14, 18, 25, 30]}, "db_foreign_keys": {"column_id": [4, 19, 24, 23, 26, 31, 30], "other_column_id": [1, 8, 11, 18, 18, 14, 25]}}
{"query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "question": "What college has a student who successfully made the team in the role of a goalie?", "db_id": "soccer_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["College", "Player", "Tryout"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "cName", "state", "enr", "pID", "pName", "yCard", "HS", "pID", "cName", "pPos", "decision"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "text", "number", "number", "text", "text", "text"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [1, 4]}}
{"query": "SELECT name FROM enzyme ORDER BY name DESC", "question": "List the name of enzymes in descending lexicographical order.", "db_id": "medicine_enzyme_interaction", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["medicine", "enzyme", "medicine_enzyme_interaction"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "id", "name", "Trade_Name", "FDA_approved", "id", "name", "Location", "Product", "Chromosome", "OMIM", "Porphyria", "enzyme_id", "medicine_id", "interaction_type"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 5, 12]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [1, 5]}}
{"query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "question": "What are the names of all people who are friends with Alice for the shortest amount of time?", "db_id": "network_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Person", "PersonFriend"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "column_name": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"]}, "db_column_types": ["text", "text", "number", "text", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [7, 6], "other_column_id": [1, 1]}}
{"query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "question": "What are the ids and last names of all drivers who participated in the most races?", "db_id": "formula_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["circuits", "races", "drivers", "status", "seasons", "constructors", "constructorStandings", "results", "driverStandings", "constructorResults", "qualifying", "pitStops", "lapTimes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12], "column_name": ["*", "circuitId", "circuitRef", "name", "location", "country", "lat", "lng", "alt", "url", "raceId", "year", "round", "circuitId", "name", "date", "time", "url", "driverId", "driverRef", "number", "code", "forename", "surname", "dob", "nationality", "url", "statusId", "status", "year", "url", "constructorId", "constructorRef", "name", "nationality", "url", "constructorStandingsId", "raceId", "constructorId", "points", "position", "positionText", "wins", "resultId", "raceId", "driverId", "constructorId", "number", "grid", "position", "positionText", "positionOrder", "points", "laps", "time", "milliseconds", "fastestLap", "rank", "fastestLapTime", "fastestLapSpeed", "statusId", "driverStandingsId", "raceId", "driverId", "points", "position", "positionText", "wins", "constructorResultsId", "raceId", "constructorId", "points", "status", "qualifyId", "raceId", "driverId", "constructorId", "number", "position", "q1", "q2", "q3", "raceId", "driverId", "stop", "lap", "time", "duration", "milliseconds", "raceId", "driverId", "lap", "position", "time", "milliseconds"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "number", "text", "number", "text", "text", "text", "text", "number", "number", "number", "number", "number", "text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "number", "number", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "number", "number", "number", "number", "number", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "number", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "number"], "db_primary_keys": {"column_id": [1, 10, 18, 27, 29, 31, 36, 43, 61, 68, 73, 82, 89]}, "db_foreign_keys": {"column_id": [13, 37, 38, 45, 44, 46, 63, 62, 69, 70, 75, 74, 76, 83, 82, 90, 89], "other_column_id": [1, 10, 31, 18, 10, 31, 18, 10, 10, 31, 18, 10, 31, 18, 10, 18, 10]}}
{"query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"", "question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.", "db_id": "insurance_and_eClaims", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Customers", "Staff", "Policies", "Claim_Headers", "Claims_Documents", "Claims_Processing_Stages", "Claims_Processing"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6], "column_name": ["*", "Customer_ID", "Customer_Details", "Staff_ID", "Staff_Details", "Policy_ID", "Customer_ID", "Policy_Type_Code", "Start_Date", "End_Date", "Claim_Header_ID", "Claim_Status_Code", "Claim_Type_Code", "Policy_ID", "Date_of_Claim", "Date_of_Settlement", "Amount_Claimed", "Amount_Piad", "Claim_ID", "Document_Type_Code", "Created_by_Staff_ID", "Created_Date", "Claim_Stage_ID", "Next_Claim_Stage_ID", "Claim_Status_Name", "Claim_Status_Description", "Claim_Processing_ID", "Claim_ID", "Claim_Outcome_Code", "Claim_Stage_ID", "Staff_ID"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "time", "time", "number", "text", "text", "number", "time", "time", "number", "number", "number", "text", "number", "number", "number", "number", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 5, 10, 18, 22, 26]}, "db_foreign_keys": {"column_id": [6, 13, 20, 18, 30, 27], "other_column_id": [1, 5, 3, 10, 3, 10]}}
{"query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1", "question": "Find the physician who was trained in the most expensive procedure?", "db_id": "hospital_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Physician", "Department", "Affiliated_With", "Procedures", "Trained_In", "Patient", "Nurse", "Appointment", "Medication", "Prescribes", "Block", "Room", "On_Call", "Stay", "Undergoes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14], "column_name": ["*", "EmployeeID", "Name", "Position", "SSN", "DepartmentID", "Name", "Head", "Physician", "Department", "PrimaryAffiliation", "Code", "Name", "Cost", "Physician", "Treatment", "CertificationDate", "CertificationExpires", "SSN", "Name", "Address", "Phone", "InsuranceID", "PCP", "EmployeeID", "Name", "Position", "Registered", "SSN", "AppointmentID", "Patient", "PrepNurse", "Physician", "Start", "End", "ExaminationRoom", "Code", "Name", "Brand", "Description", "Physician", "Patient", "Medication", "Date", "Appointment", "Dose", "BlockFloor", "BlockCode", "RoomNumber", "RoomType", "BlockFloor", "BlockCode", "Unavailable", "Nurse", "BlockFloor", "BlockCode", "OnCallStart", "OnCallEnd", "StayID", "Patient", "Room", "StayStart", "StayEnd", "Patient", "Procedures", "Stay", "DateUndergoes", "Physician", "AssistingNurse"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "text", "number", "number", "number", "boolean", "number", "text", "number", "number", "number", "time", "time", "number", "text", "text", "text", "number", "number", "number", "text", "text", "boolean", "number", "number", "number", "number", "number", "time", "time", "text", "number", "text", "text", "text", "number", "number", "number", "time", "number", "text", "number", "number", "number", "text", "number", "number", "boolean", "number", "number", "number", "time", "time", "number", "number", "number", "time", "time", "number", "number", "number", "time", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 8, 11, 14, 18, 24, 29, 36, 40, 46, 48, 53, 58, 63]}, "db_foreign_keys": {"column_id": [7, 9, 8, 15, 14, 23, 32, 31, 30, 44, 42, 41, 40, 50, 51, 54, 55, 53, 60, 59, 68, 67, 65, 64, 63], "other_column_id": [1, 5, 1, 11, 1, 1, 1, 24, 18, 29, 36, 18, 1, 46, 47, 46, 47, 24, 48, 18, 24, 1, 58, 11, 18]}}
