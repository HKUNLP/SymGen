{"query": "SELECT count(*) FROM singer", "question": "How many singers do we have?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT count(*) FROM singer", "question": "What is the total number of singers?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "question": "What are the names, countries, and ages for every singer in descending order of age?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "question": "What is the average, minimum, and maximum age of all singers from France?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "question": "What is the average, minimum, and maximum age for all French singers?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "question": "Show the name and the release year of the song by the youngest singer.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "question": "What are the names and release years for all the songs of the youngest singer?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "question": "What are all distinct countries where singers above age 20 are from?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "question": "What are  the different countries with singers above age 20?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT country ,  count(*) FROM singer GROUP BY country", "question": "Show all countries and the number of singers in each country.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT country ,  count(*) FROM singer GROUP BY country", "question": "How many singers are from each country?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "question": "List all song names by singers above the average age.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "question": "What are all the song names by singers who are older than average?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "question": "What are the locations and names of all stations with capacity between 5000 and 10000?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select max(capacity), average from stadium", "question": "What is the maximum capacity and the average of all stadiums ?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select avg(capacity) ,  max(capacity) from stadium", "question": "What is the average and maximum capacities for all stadiums ?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "question": "What is the name and capacity for the stadium with highest average attendance?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "question": "What is the name and capacity for the stadium with the highest average attendance?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "question": "How many concerts are there in year 2014 or 2015?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "question": "How many concerts occurred in 2014 or 2015?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "question": "Show the stadium name and the number of concerts in each stadium.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "question": "For each stadium, how many concerts play there?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "question": "Which year has most number of concerts?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "question": "What is the year that had the most concerts?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "question": "Show the stadium names without any concert.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "question": "What are the names of the stadiums without any concerts?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "question": "Show countries where a singer above age 40 and a singer below 30 are from.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "question": "Show names for all stadiums except for stadiums having a concert in year 2014.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "question": "What are the names of all stadiums that did not have a concert in 2014?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "question": "Show the name and theme for all concerts and the number of singers in each concert.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id", "question": "What are the names , themes , and number of singers for every concert ?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "question": "List singer names and number of concerts for each singer.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "question": "What are the names of the singers and number of concerts for each person?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "question": "List all singer names in concerts in year 2014.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "question": "What are the names of the singers who performed in a concert in 2014?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "question": "Find the number of concerts happened in the stadium with the highest capacity .", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?", "db_id": "concert_singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["stadium", "singer", "concert", "singer_in_concert"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "column_name": ["*", "Stadium_ID", "Location", "Name", "Capacity", "Highest", "Lowest", "Average", "Singer_ID", "Name", "Country", "Song_Name", "Song_release_year", "Age", "Is_male", "concert_ID", "concert_Name", "Theme", "Stadium_ID", "Year", "concert_ID", "Singer_ID"]}, "db_column_types": ["text", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "text", "number", "others", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 8, 15, 20]}, "db_foreign_keys": {"column_id": [18, 21, 20], "other_column_id": [1, 8, 15]}}
{"query": "SELECT count(*) FROM pets WHERE weight  >  10", "question": "Find the number of pets whose weight is heavier than 10.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM pets WHERE weight  >  10", "question": "How many pets have a greater weight than 10?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "question": "Find the weight of the youngest dog.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "question": "How much does the youngest dog weigh?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "question": "List the maximum weight and type for each type of pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "question": "Find number of pets owned by students who are older than 20.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "question": "How many pets are owned by students that have an age greater than 20?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "question": "Find the number of dog pets that are raised by female students (with sex F).", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "question": "How many dog pets are raised by female students?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(DISTINCT pettype) FROM pets", "question": "Find the number of distinct type of pets.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(DISTINCT pettype) FROM pets", "question": "How many different types of pet are there?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "question": "Find the first name of students who have cat or dog pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "question": "What are the first names of every student who has a cat or dog as a pet?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "question": "Find the first name of students who have both cat and dog pets .", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "question": "What are the students' first names who have both cats and dogs as pets?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "question": "Find the major and age of students who do not have a cat pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "question": "What major is every student who does not own a cat as a pet, and also how old are they?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "question": "Find the id of students who do not have a cat pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "question": "What are the ids of the students who do not own cats as pets?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "question": "What is the first name of every student who has a dog but does not have a cat?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "question": "Find the type and weight of the youngest pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "question": "What type of pet is the youngest animal, and how much does it weigh?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "question": "Find the id and weight of all pets whose age is older than 1.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "question": "What is the id and weight of every pet who is older than 1?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "question": "Find the average and maximum age for each type of pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "question": "What is the average and maximum age for each pet type?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "question": "Find the average weight for each pet type.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "question": "What is the average weight for each type of pet?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "question": "Find the first name and age of students who have a pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "question": "What are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "question": "What is the id of the pet owned by the student whose last name is 'Smith'?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "question": "Find the number of pets for each student who has any pet and student id.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "question": "Find the first name and gender of student who have more than one pet.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "question": "What is the first name and gender of the all the students who have more than one pet?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "question": "Find the last name of the student who has a cat that is age 3.", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "question": "What is the last name of the student who has a cat that is 3 years old?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "question": "Find the average age of students who do not have any pet .", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "question": "What is the average age for all students who do not own any pets ?", "db_id": "pets_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Student", "Has_Pet", "Pets"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2], "column_name": ["*", "StuID", "LName", "Fname", "Age", "Sex", "Major", "Advisor", "city_code", "StuID", "PetID", "PetID", "PetType", "pet_age", "weight"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 11]}, "db_foreign_keys": {"column_id": [9, 10], "other_column_id": [1, 11]}}
{"query": "SELECT count(*) FROM CONTINENTS;", "question": "How many continents are there?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CONTINENTS;", "question": "What is the number of continents?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "question": "For each continent, list its id, name, and how many countries it has?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM COUNTRIES;", "question": "How many countries are listed?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM COUNTRIES;", "question": "How many countries exist?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "question": "How many models does each car maker produce? List maker full name, id and the number.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "question": "What is the full name of each car maker, along with its id and how many models it produces?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "question": "Which model of the car has the minimum horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "question": "What is the model of the car with the smallest amount of horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "question": "Find the model of the car whose weight is below the average weight.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "question": "What is the model for the car with a weight smaller than the average?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "question": "Find the name of the makers that produced some cars in the year of 1970?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "question": "What is the name of the different car makers who produced a car in 1970?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "question": "Find the make and production time of the cars that were produced in the earliest year?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "question": "What is the maker of the carr produced in the earliest year and what year was it?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "question": "Which distinct car models are the produced after 1980?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "question": "What are the different models for the cards produced after 1980?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "question": "How many car makers are there in each continents? List the continent name and the count.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "question": "What is the name of each continent and how many car makers are there in each one?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "question": "Which of the countries has the most car makers? List the country name.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "question": "What is the name of the country with the most car makers?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "question": "How many car models are produced by each maker ? Only list the count and the maker full name .", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "question": "What is the accelerate of the car make amc hornet sportabout (sw)?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "question": "How many car makers are there in france?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "question": "What is the number of makers of care in France?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "question": "How many car models are produced in the usa?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "question": "What is the count of the car models produced in the United States?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "question": "What is the average miles per gallon of all the cards with 4 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "question": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Maker ,  Model FROM MODEL_LIST;", "question": "What are all the makers and models?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Maker ,  Model FROM MODEL_LIST;", "question": "What are the makers and models?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "question": "What are the countries having at least one car maker? List name and id.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "question": "What are the names and ids of all countries with at least one car maker?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "question": "What is the number of the cars with horsepower more than 150?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "question": "What is the number of cars with a horsepower greater than 150?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "question": "What is the average weight of cars each year?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "question": "What is the average weight and year for each year?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "question": "Which countries in europe have at least 3 car manufacturers?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "question": "What are the names of all European countries with at least 3 manufacturers?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "question": "What is the car model with the highest mpg ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "question": "What is the average horsepower of the cars before 1980?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select avg(horsepower) from cars_data where year  <  1980;", "question": "What is the average horsepower for all cars produced before 1980 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "question": "What is the average edispl of the cars of model volvo?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "question": "What is the average edispl for all volvos?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "question": "What is the maximum accelerate for different number of cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "question": "What is the maximum accelerate for all the different cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "question": "Which model has the most version(make) of cars?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "question": "What model has the most different versions?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "question": "How many cars have more than 4 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "question": "What is the number of cars with more than 4 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "question": "how many cars were produced in 1980?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "question": "In 1980, how many cars were made?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "question": "How many car models were produced by the maker with full name American Motor Company?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "question": "What is the number of car models created by the car maker American Motor Company?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "question": "Which makers designed more than 3 car models? List full name and the id.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "question": "What are the names and ids of all makers with more than 3 models?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select distinct year from cars_data where weight between 3000 and 4000;", "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select distinct year from cars_data where weight between 3000 and 4000;", "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "question": "What is the horsepower of the car with the largest accelerate?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "question": "What is the horsepower of the car with the greatest accelerate?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "question": "For model volvo, how many cylinders does the car with the least accelerate have?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "question": "For a volvo model, how many cylinders does the version with least accelerate have?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "question": "How many cars have a larger accelerate than the car with the largest horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "question": "How many countries has more than 2 car makers ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "question": "What is the number of countries with more than 2 car makers ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "question": "How many cars has over 6 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "question": "What is the number of carsw ith over 6 cylinders?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "question": "For the cars with 4 cylinders, which model has the largest horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "question": "For all of the 4 cylinder cars, which model has the most horsepower?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "question": "What are the name of the countries where there is not a single car maker?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "question": "What are the names of the countries with no car makers?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;", "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "db_id": "car_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["continents", "countries", "car_makers", "model_list", "car_names", "cars_data"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5], "column_name": ["*", "ContId", "Continent", "CountryId", "CountryName", "Continent", "Id", "Maker", "FullName", "Country", "ModelId", "Maker", "Model", "MakeId", "Model", "Make", "Id", "MPG", "Cylinders", "Edispl", "Horsepower", "Weight", "Accelerate", "Year"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "text", "text", "number", "number", "text", "number", "text", "text", "number", "text", "number", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 10, 13, 16]}, "db_foreign_keys": {"column_id": [5, 9, 11, 14, 16], "other_column_id": [1, 3, 6, 12, 13]}}
{"query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "question": "Which country does Airline \"JetBlue Airways\" belong to?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "question": "What country is Jetblue Airways affiliated with?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "question": "Which abbreviation corresponds to Jetblue Airways?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "question": "List all airline names and their abbreviations in \"USA\".", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "question": "What are the airline names and abbreviations for airlines in the USA?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "question": "List the airport code and name in the city of Anthony.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "question": "Give the airport code and airport name corresonding to the city Anthony.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES", "question": "How many airlines do we have?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES", "question": "What is the total number of airlines?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRPORTS", "question": "How many airports do we have?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRPORTS", "question": "Return the number of  airports.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS", "question": "How many flights do we have?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS", "question": "Return the number of flights.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "question": "Which airline has abbreviation 'UAL'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "question": "Give the airline with abbreviation 'UAL'.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "question": "How many airlines are from USA?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "question": "Return the number of airlines in the USA.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "question": "Which city and country is the Alton airport at?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "question": "Give the city and country for the Alton airport.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "question": "What is the airport name for airport 'AKO'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "question": "Return the name of the airport with code 'AKO'.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "question": "What are airport names at City 'Aberdeen'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "question": "What are the names of airports in Aberdeen?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "question": "How many flights depart from 'APG'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "question": "Count the number of flights departing from 'APG'.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "question": "How many flights have destination ATO?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "question": "Count the number of flights into ATO.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "How many flights depart from City Aberdeen?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "Return the number of flights departing from Aberdeen.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "How many flights arriving in Aberdeen city?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "Return the number of flights arriving in Aberdeen.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "question": "How many flights fly from Aberdeen to Ashley?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "question": "How many flights does airline 'JetBlue Airways' have?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "question": "Give the number of Jetblue Airways flights.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "question": "How many 'United Airlines' flights go to Airport 'ASY'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "question": "Count the number of United Airlines flights arriving in ASY Airport.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "question": "Return the number of United Airlines flights leaving from AHD Airport.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "question": "How many United Airlines flights go to City 'Aberdeen'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "question": "Count the number of United Airlines flights that arrive in Aberdeen.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "question": "Which city has most number of arriving flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "question": "Which city has the most frequent destination airport?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "question": "Which city has most number of departing flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "question": "Which city is the most frequent source airport?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "question": "What is the code of airport that has the highest number of flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "question": "What is the airport code of the airport with the most flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "question": "What is the code of airport that has fewest number of flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "question": "Give the code of the airport with the least flights.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "question": "Which airline has most number of flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "question": "What airline serves the most flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "question": "What are airlines that have some flight departing from airport 'AHD'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "question": "Which airlines have a flight with source airport AHD?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "question": "What are airlines that have flights arriving at airport 'AHD'?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "question": "Which airlines have a flight with destination airport AHD?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "question": "Which airlines have departing flights from both APG and CVO airports?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "question": "Which airlines have departures from CVO but not from APG airports?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "question": "Find all airlines that have at least 10 flights.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "question": "Which airlines have at least 10 flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "question": "Find all airlines that have fewer than 200 flights.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "question": "Which airlines have less than 200 flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "question": "What are flight numbers of Airline \"United Airlines\"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "question": "Which flight numbers correspond to United Airlines flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "question": "What are flight numbers of flights departing from Airport \"APG\"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "question": "Give the flight numbers of flights leaving from APG.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "question": "What are flight numbers of flights arriving at Airport \"APG\"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "question": "Give the flight numbers of flights landing at APG.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "Give the flight numbers of flights leaving from Aberdeen.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "question": "Give the flight numbers of flights arriving in Aberdeen.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "question": "Find the number of flights landing in the city of Aberdeen or Abilene.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "question": "How many flights land in Aberdeen or Abilene?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "question": "Find the name of airports which do not have any flight in and out.", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "question": "Which airports do not have departing or arriving flights?", "db_id": "flight_2", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["airlines", "airports", "flights"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "uid", "Airline", "Abbreviation", "Country", "City", "AirportCode", "AirportName", "Country", "CountryAbbrev", "Airline", "FlightNo", "SourceAirport", "DestAirport"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 6, 10]}, "db_foreign_keys": {"column_id": [13, 12], "other_column_id": [6, 6]}}
{"query": "SELECT count(*) FROM employee", "question": "How many employees are there?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) FROM employee", "question": "Count the number of employees", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM employee ORDER BY age", "question": "Sort employee names by their age in ascending order.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM employee ORDER BY age", "question": "List the names of employees and sort in ascending order of age.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  city FROM employee GROUP BY city", "question": "What is the number of employees from each city?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  city FROM employee GROUP BY city", "question": "Count the number of employees for each city.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "question": "Which cities do more than one employee under age 30 come from?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "question": "Find the cities that have more than one employee under age 30.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "question": "Find the number of shops in each location.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "question": "How many shops are there in each location?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "question": "Find the manager name and district of the shop whose number of products is the largest.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "question": "What are the manager name and district of the shop that sells the largest number of products?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "question": "find the minimum and maximum number of products of all stores.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "question": "What are the minimum and maximum number of products across all the shops?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "question": "Return the name, location and district of all shops in descending order of number of products.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "question": "Find the names of stores whose number products is more than the average number of products.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "question": "Which shops' number products is above the average? Give me the shop names.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "question": "find the name of employee who was awarded the most times in the evaluation.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "question": "Which employee received the most awards in evaluations? Give me the employee name.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "question": "Find the name of the employee who got the highest one time bonus.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "question": "Which employee received the biggest bonus? Give me the employee name.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "question": "Find the names of employees who never won any award in the evaluation.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "question": "What are the names of the employees who never received any evaluation?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the shop that is hiring the largest number of employees?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "question": "Which shop has the most employees? Give me the shop name.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "question": "Find the name of the shops that do not hire any employee.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "question": "Which shops run with no employees? Find the shop names", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "question": "Find the number of employees hired in each shop; show the shop name as well.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "question": "For each shop, return the number of employees working there and the name of the shop.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT sum(bonus) FROM evaluation", "question": "What is total bonus given in all evaluations?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT sum(bonus) FROM evaluation", "question": "Find the total amount of bonus given in all the evaluations.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT * FROM hiring", "question": "Give me all the information about hiring.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT * FROM hiring", "question": "What is all the information about hiring?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(DISTINCT LOCATION) FROM shop", "question": "How many different store locations are there?", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(DISTINCT LOCATION) FROM shop", "question": "Count the number of distinct store locations.", "db_id": "employee_hire_evaluation", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["employee", "shop", "hiring", "evaluation"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3], "column_name": ["*", "Employee_ID", "Name", "Age", "City", "Shop_ID", "Name", "Location", "District", "Number_products", "Manager_name", "Shop_ID", "Employee_ID", "Start_from", "Is_full_time", "Employee_ID", "Year_awarded", "Bonus"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "text", "text", "number", "text", "number", "number", "text", "others", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 5, 12, 15]}, "db_foreign_keys": {"column_id": [12, 11, 15], "other_column_id": [1, 5, 1]}}
{"query": "SELECT count(*) FROM Documents", "question": "How many documents do we have?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Documents", "question": "Count the number of documents.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "question": "List document IDs, document names, and document descriptions for all documents.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "question": "What are the ids, names, and descriptions for all documents?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "question": "What is the document name and template id for document with description with the letter 'w' in it?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "question": "Return the names and template ids for documents that contain the letter w in their description.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "question": "What is the document id, template id and description for document named \"Robbin CV\"?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "question": "Return the document id, template id, and description for the document with the name Robbin CV.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(DISTINCT template_id) FROM Documents", "question": "How many different templates do all document use?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(DISTINCT template_id) FROM Documents", "question": "Count the number of different templates used for documents.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "question": "How many documents are using the template with type code 'PPT'?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "question": "Count the number of documents that use the PPT template type.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "question": "Show all template ids and number of documents using each template.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "question": "What are all different template ids used for documents, and how many times were each of them used?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the id and type code for the template used by the most documents?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "question": "Return the id and type code of the template that is used for the greatest number of documents.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "question": "Show ids for all templates that are used by more than one document.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "question": "What are the template ids of any templates used in more than a single document?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "question": "Show ids for all templates not used by any document.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "question": "What are the ids for templates that are not used in any documents?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Templates", "question": "How many templates do we have?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Templates", "question": "Count the number of templates.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "question": "Show template ids, version numbers, and template type codes for all templates.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "question": "What are the ids, version numbers, and type codes for each template?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT DISTINCT template_type_code FROM Templates", "question": "Show all distinct template type codes for all templates.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT DISTINCT template_type_code FROM Templates", "question": "What are the different template type codes?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "question": "What are the ids of templates with template type code PP or PPT?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "question": "Return the ids of templates that have the code PP or PPT.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "question": "How many templates have template type code CV?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "question": "Count the number of templates of the type CV.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "question": "What is the version number and template type code for the template with version number later than 5?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "question": "Return the version numbers and template type codes of templates with a version number greater than 5.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "question": "Show all template type codes and number of templates for each.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "question": "What are the different template type codes, and how many templates correspond to each?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "question": "Which template type code has most number of templates?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "question": "Return the type code of the template type that the most templates belong to.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "question": "Show all template type codes with less than three templates.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "question": "What are the codes of template types that have fewer than 3 templates?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "question": "What the smallest version number and its template type code?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "question": "Return the lowest version number, along with its corresponding template type code.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "question": "What is the template type code of the template used by document with the name \"Data base\"?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "question": "Return the template type code of the template that is used by a document named Data base.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "question": "Show all document names using templates with template type code BK.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "question": "What are the names of documents that use templates with the code BK?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "question": "Show all template type codes and the number of documents using each type.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "question": "What are the different template type codes, and how many documents use each type?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "question": "Which template type code is used by most number of documents?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "question": "Return the code of the template type that is most commonly used in documents.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "question": "Show all template type codes that are not used by any document.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "question": "What are the codes of template types that are not used for any document?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "question": "Show all template type codes and descriptions.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "question": "What are the type codes and descriptions for all template types?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "question": "What is the template type descriptions for template type code \"AD\".", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "question": "Return the template type description of the template type with the code AD.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "question": "What is the template type code for template type description \"Book\".", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "question": "Return the type code of the template type with the description \"Book\".", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "question": "What are the distinct template type descriptions for the templates ever used by any document?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "question": "Return the different descriptions for templates that have been used in a document.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "question": "What are the template ids with template type description \"Presentation\".", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "question": "Return the ids corresponding to templates with the description 'Presentation'.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Paragraphs", "question": "How many paragraphs in total?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Paragraphs", "question": "Count the number of paragraphs.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "question": "How many paragraphs for the document with name 'Summer Show'?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "question": "Count the number of paragraphs in the document named 'Summer Show'.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "select other_details from paragraphs where paragraph_text like 'korea'", "question": "Show paragraph details for paragraph with text 'Korea ' .", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "select other_details from paragraphs where paragraph_text like 'korea'", "question": "What are the details for the paragraph that includes the text 'Korea ' ?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "question": "Show all paragraph texts for the document \"Customer reviews\".", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "question": "What are the paragraph texts for the document with the name 'Customer reviews'?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "question": "Show all document ids, names and the number of paragraphs in each document.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "question": "List all document ids with at least two paragraphs.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "question": "What are the ids of documents that have 2 or more paragraphs?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the document id and name with greatest number of paragraphs?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "question": "Return the id and name of the document with the most paragraphs.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "question": "What is the document id with least number of paragraphs?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "question": "Return the id of the document with the fewest paragraphs.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "question": "What is the document id with 1 to 2 paragraphs?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "question": "Give the ids of documents that have between one and two paragraphs.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "db_id": "cre_Doc_Template_Mgt", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Template_Types", "Templates", "Documents", "Paragraphs"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "Template_Type_Code", "Template_Type_Description", "Template_ID", "Version_Number", "Template_Type_Code", "Date_Effective_From", "Date_Effective_To", "Template_Details", "Document_ID", "Template_ID", "Document_Name", "Document_Description", "Other_Details", "Paragraph_ID", "Document_ID", "Paragraph_Text", "Other_Details"]}, "db_column_types": ["text", "text", "text", "number", "number", "text", "time", "time", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text"], "db_primary_keys": {"column_id": [1, 3, 9, 14]}, "db_foreign_keys": {"column_id": [5, 10, 15], "other_column_id": [1, 3, 9]}}
{"query": "SELECT count(*) FROM teacher", "question": "How many teachers are there?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT count(*) FROM teacher", "question": "What is the total count of teachers?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher ORDER BY Age ASC", "question": "List the names of teachers in ascending order of age.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher ORDER BY Age ASC", "question": "What are the names of the teachers ordered by ascending age?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Age ,  Hometown FROM teacher", "question": "What are the age and hometown of teachers?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Age ,  Hometown FROM teacher", "question": "What is the age and hometown of every teacher?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "select name from teacher where hometown != \"little lever urban district\"", "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "select name from teacher where hometown != \"little lever urban district\"", "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "question": "Show the name of teachers aged either 32 or 33?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "question": "What are the names of the teachers who are aged either 32 or 33?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "question": "What is the hometown of the youngest teacher?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "question": "Where is the youngest teacher from?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "question": "Show different hometown of teachers and the number of teachers from each hometown.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "question": "For each hometown, how many teachers are there?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "question": "List the most common hometown of teachers.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is the most commmon hometowns for teachers?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "question": "Show the hometowns shared by at least two teachers.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "question": "What are the towns from which at least two teachers come from?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "question": "Show names of teachers and the courses they are arranged to teach.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "question": "What is the name of each teacher and what course they teach?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "question": "Show the name of the teacher for the math course.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "question": "What are the names of the people who teach math courses?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "question": "Show names of teachers and the number of courses they teach.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "question": "What are the names of the teachers and how many courses do they teach?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "question": "Show names of teachers that teach at least two courses.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "question": "What are the names of the teachers who teach at least two courses?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "question": "List the names of teachers who have not been arranged to teach courses.", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "question": "What are the names of the teachers whose courses have not been arranged?", "db_id": "course_teach", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["course", "teacher", "course_arrange"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "column_name": ["*", "Course_ID", "Staring_Date", "Course", "Teacher_ID", "Name", "Age", "Hometown", "Course_ID", "Teacher_ID", "Grade"]}, "db_column_types": ["text", "number", "text", "text", "number", "text", "text", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 8]}, "db_foreign_keys": {"column_id": [9, 8], "other_column_id": [4, 1]}}
{"query": "SELECT count(*) FROM visitor WHERE age  <  30", "question": "How many visitors below age 30 are there?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "question": "What is the average age of the visitors whose membership level is not higher than 4?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "question": "Find the id and name of the museum that has the most staff members?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "question": "Find the average number of staff working for the museums that were open before 2009.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "question": "What are the opening year and staff number of the museum named Plaza Museum?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "question": "find the id, name and age for visitors who visited some museums more than once.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "question": "What are the id and name of the museum visited most times?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "question": "What is the name of the museum that had no visitor yet?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "question": "Find the name and age of the visitor who bought the most tickets at once.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "question": "What are the average and maximum number of tickets bought in all visits?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "question": "What is the total ticket expense of the visitors whose membership level is 1?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "question": "Find the number of visitors who did not visit any museum opened after 2010.", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "question": "How many museums were opened after 2013 or before 2008?", "db_id": "museum_visit", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["museum", "visitor", "visit"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "column_name": ["*", "Museum_ID", "Name", "Num_of_Staff", "Open_Year", "ID", "Name", "Level_of_membership", "Age", "Museum_ID", "visitor_ID", "Num_of_Ticket", "Total_spent"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "text", "number", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 5, 9]}, "db_foreign_keys": {"column_id": [10, 9], "other_column_id": [5, 1]}}
{"query": "SELECT count(*) FROM players", "question": "Find the total number of players.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM players", "question": "How many players are there?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM matches", "question": "Find the total number of matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM matches", "question": "Count the number of matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "question": "List the first name and birth date of all players from the country with code USA.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "question": "What are the first names and birth dates of players from the USA?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "question": "Find the average age of losers and winners of all matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "question": "What are the average ages of losers and winners across matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(winner_rank) FROM matches", "question": "Find the average rank of winners in all matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(winner_rank) FROM matches", "question": "What is the average rank for winners in all matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT min(loser_rank) FROM matches", "question": "Find the highest rank of losers in all matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT min(loser_rank) FROM matches", "question": "What is the best rank of losers across all matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT country_code) FROM players", "question": "find the number of distinct country codes of all players.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT country_code) FROM players", "question": "How many distinct countries do players come from?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT loser_name) FROM matches", "question": "Find the number of distinct name of losers.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT loser_name) FROM matches", "question": "How many different loser names are there?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "question": "Find the name of tourney that has more than 10 matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10", "question": "What are the names of tournaments that have more than 10 matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "question": "List the names of all winners who played in both 2013 and 2016.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016", "question": "What are the names of players who won in both 2013 and 2016?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "question": "List the number of all matches who played in years of 2013 or 2016.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "question": "How many matches were played in 2013 or 2016?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'", "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "question": "Find the first name and country code of the oldest player.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "question": "What is the first name and country code of the oldest player?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "question": "List the first and last name of all players in the order of birth date.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "question": "What are the full names of all players, sorted by birth date?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "question": "List the first and last name of all players who are left / L hand in the order of birth date.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date", "question": "What are the full names of all left handed players, in order of birth date?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "question": "Find the first name and country code of the player who did the most number of tours.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "question": "What is the first name and country code of the player with the most tours?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "question": "Find the year that has the most number of matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "question": "Which year had the most matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "question": "Find the name and rank points of the winner who won the most times.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1", "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "question": "find the names of loser and winner who played in the match with greatest number of minutes.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "question": "What are the names of the winner and loser who played in the longest match?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "question": "Find the average ranking for each player and their first name.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "question": "What are the first names of all players, and their average rankings?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "question": "Find the total ranking points for each player and their first name.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "question": "What are the first names of all players, and their total ranking points?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "question": "find the number of players for each country.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "question": "How many players are from each country?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "question": "find the code of the country where has the greatest number of players.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1", "question": "What is the code of the country with the most players?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "question": "Find the codes of countries that have more than 50 players.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "question": "What are the codes of countries with more than 50 players?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "question": "Find the total number of tours for each ranking date.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "question": "How many total tours were there for each ranking date?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "question": "Find the number of matches happened in each year.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "question": "How many matches were played in each year?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "question": "Find the name and rank of the 3 youngest winners across all matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3", "question": "What are the names and ranks of the three youngest winners across all matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "question": "How many different winners both participated in the WTA Championships and were left handed?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "question": "Find the number of left handed winners who participated in the WTA Championships.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "question": "Find the number of players for each hand type.", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) ,  hand FROM players GROUP BY hand", "question": "How many players are there for each hand type?", "db_id": "wta_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["players", "matches", "rankings"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "player_id", "first_name", "last_name", "hand", "birth_date", "country_code", "best_of", "draw_size", "loser_age", "loser_entry", "loser_hand", "loser_ht", "loser_id", "loser_ioc", "loser_name", "loser_rank", "loser_rank_points", "loser_seed", "match_num", "minutes", "round", "score", "surface", "tourney_date", "tourney_id", "tourney_level", "tourney_name", "winner_age", "winner_entry", "winner_hand", "winner_ht", "winner_id", "winner_ioc", "winner_name", "winner_rank", "winner_rank_points", "winner_seed", "year", "ranking_date", "ranking", "player_id", "ranking_points", "tours"]}, "db_column_types": ["text", "number", "text", "text", "text", "time", "text", "number", "number", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "number", "text", "text", "text", "time", "text", "text", "text", "number", "text", "text", "number", "number", "text", "text", "number", "number", "number", "number", "time", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1]}, "db_foreign_keys": {"column_id": [32, 13, 41], "other_column_id": [1, 1, 1]}}
{"query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "question": "How many ships ended up being 'Captured'?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT name ,  date FROM battle", "question": "List the name, date and result of each battle.", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT max(killed) ,  min(killed) FROM death", "question": "What is maximum and minimum death toll caused each time?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT avg(injured) FROM death", "question": "What is the average number of injuries caused each time?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "question": "What are the death and injury situations caused by the ship with tonnage 't'?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "question": "What is the ship id and name that caused most total injuries?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT count(DISTINCT RESULT) FROM battle", "question": "How many different results are there for the battles?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "question": "How many battles did not lose any ship with tonnage '225'?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT note FROM death WHERE note LIKE '%East%'", "question": "What are the notes of the death events which has substring 'East'?", "db_id": "battle_death", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["battle", "ship", "death"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "id", "name", "date", "bulgarian_commander", "latin_commander", "result", "lost_in_battle", "id", "name", "tonnage", "ship_type", "location", "disposition_of_ship", "caused_by_ship_id", "id", "note", "killed", "injured"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "number", "number", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 8, 15]}, "db_foreign_keys": {"column_id": [7, 14], "other_column_id": [1, 8]}}
{"query": "SELECT line_1 ,  line_2 FROM addresses", "question": "what are all the addresses including line 1 and line 2?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT line_1 ,  line_2 FROM addresses", "question": "What is the first and second line for all addresses?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Courses", "question": "How many courses in total are listed?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Courses", "question": "How many courses are there?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "question": "How is the math course described?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "question": "What are the descriptions for all the math courses?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "question": "What is the zip code of the address in the city Port Chelsea?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "question": "What is the zip code for Port Chelsea?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "question": "Which department offers the most number of degrees? List department name and id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "question": "What is the name and id of the department with the most number of degrees ?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "question": "How many departments offer any degree?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "question": "How many different departments offer degrees?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "question": "How many different degree names are offered?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "question": "How many different degrees are offered?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "question": "How many degrees does the engineering department offer?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "question": "How many degrees does the engineering department have?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_name ,  section_description FROM Sections", "question": "What are the names and descriptions of all the sections?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_name ,  section_description FROM Sections", "question": "What are the names and descriptions for all the sections?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "question": "What are the names and id of courses having at most 2 sections?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "question": "What are the names and ids of every course with less than 2 sections?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "question": "List the section_name in reversed lexicographical order.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "question": "What are the names of the sections in reverse alphabetical order?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the semester which most student registered in? Show both the name and the id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "question": "For each semester, what is the name and id of the one with the most students registered?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "question": "What is the description of the department whose name has the substring the computer?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "question": "What is the department description for the one whose name has the word computer?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "question": "Find the kind of program which most number of students are enrolled in?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "question": "What is the degree summary name that has the most number of students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "question": "Find the program which most number of students are enrolled in. List both the id and the summary.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the program id and the summary of the degree that has the most students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "question": "Which semesters do not have any student enrolled? List the semester name.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "question": "What is the name of the semester with no students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "question": "What are all the course names of the courses which ever have students enrolled in?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "question": "What are the names of all courses that have some students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "question": "What's the name of the course with most number of enrollments?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the course with the most students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "question": "Show the date and id of the transcript with at least 2 course results.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "question": "What is the date and id of the transcript with at least 2 courses listed?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "question": "What is the mobile phone number of the student named Timmothy Ward ?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "question": "Who is the first student to register? List the first name, middle name and last name.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "question": "What is the first, middle, and last name of the first student to register?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "question": "What is the first, middle, and last name of the earliest school graduate?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "question": "Whose permanent address is different from his or her current address? List his or her first name.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "question": "What is the first name of the student whose permanent address is different from his or her current one?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "question": "Which address holds the most number of students currently? List the address id and all lines.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the id, line 1, and line 2 of the address with the most students?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT avg(transcript_date) FROM Transcripts", "question": "On average, when were the transcripts printed?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT avg(transcript_date) FROM Transcripts", "question": "What is the average transcript date?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "question": "When is the first transcript released? List the date and details.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "question": "What is the earliest date of a transcript release, and what details can you tell me?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Transcripts", "question": "How many transcripts are released?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) FROM Transcripts", "question": "How many transcripts are listed?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "question": "What is the last transcript release date?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "question": "When was the last transcript released?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "question": "Show the date of the transcript which shows the least number of results, also list the id.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "question": "What is the date and id of the transcript with the least number of results?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "question": "Find the semester when both Master students and Bachelor students got enrolled in.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT current_address_id) FROM Students", "question": "How many different addresses do the students currently live?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT count(DISTINCT current_address_id) FROM Students", "question": "What are the different addresses that have students living there?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "question": "List all the student details in reversed lexicographical order.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "question": "What other details can you tell me about students in reverse alphabetical order?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "question": "Describe the section h.", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "question": "What is the description for the section named h?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "db_id": "student_transcripts_tracking", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Addresses", "Courses", "Departments", "Degree_Programs", "Sections", "Semesters", "Students", "Student_Enrolment", "Student_Enrolment_Courses", "Transcripts", "Transcript_Contents"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10], "column_name": ["*", "address_id", "line_1", "line_2", "line_3", "city", "zip_postcode", "state_province_county", "country", "other_address_details", "course_id", "course_name", "course_description", "other_details", "department_id", "department_name", "department_description", "other_details", "degree_program_id", "department_id", "degree_summary_name", "degree_summary_description", "other_details", "section_id", "course_id", "section_name", "section_description", "other_details", "semester_id", "semester_name", "semester_description", "other_details", "student_id", "current_address_id", "permanent_address_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "ssn", "date_first_registered", "date_left", "other_student_details", "student_enrolment_id", "degree_program_id", "semester_id", "student_id", "other_details", "student_course_id", "course_id", "student_enrolment_id", "transcript_id", "transcript_date", "other_details", "student_course_id", "transcript_id"]}, "db_column_types": ["text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "number", "text", "text", "text", "number", "text", "text", "text", "number", "number", "number", "text", "text", "text", "text", "text", "text", "time", "time", "text", "number", "number", "number", "number", "text", "number", "number", "number", "number", "time", "text", "number", "number"], "db_primary_keys": {"column_id": [1, 10, 14, 18, 23, 28, 32, 44, 49, 52]}, "db_foreign_keys": {"column_id": [19, 24, 34, 33, 47, 46, 45, 51, 50, 56, 55], "other_column_id": [14, 10, 1, 1, 32, 28, 18, 44, 10, 52, 49]}}
{"query": "SELECT Title FROM Cartoon ORDER BY title", "question": "List the title of all cartoons in alphabetical order.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Title FROM Cartoon ORDER BY title", "question": "What are the titles of the cartoons sorted alphabetically?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "question": "List all cartoon directed by \"Ben Jones\".", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "question": "What are the names of all cartoons directed by Ben Jones?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "question": "How many cartoons were written by \"Joseph Kuhr\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "question": "What is the number of cartoones written by Joseph Kuhr?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "question": "list all cartoon titles and their directors ordered by their air date", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "question": "What is the name and directors of all the cartoons that are ordered by air date?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "question": "What is the country with the most number of TV Channels and how many does it have?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "question": "List the number of different series names and contents in the TV Channel table.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "question": "How many different series and contents are listed in the TV Channel table?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "question": "What is the content of TV Channel with serial name \"Sky Radio\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "question": "What is the content of the series Sky Radio?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "question": "How many TV Channel using language English?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "question": "How many TV Channels use the English language?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "question": "List the language used least number of TV Channel. List language and number of TV Channel.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "question": "What are the languages used by the least number of TV Channels and how many channels use it?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "question": "List each language and the number of TV Channels using it.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "question": "For each language, list the number of TV Channels that use it.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Episode FROM TV_series ORDER BY rating", "question": "List the Episode of all TV series sorted by rating.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Episode FROM TV_series ORDER BY rating", "question": "What are all of the episodes ordered by ratings?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "question": "What is minimum and maximum share of TV series?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "question": "What is the maximum and minimum share for the TV series?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "question": "When did the episode \"A Love of a Lifetime\" air?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "question": "What is the episode for the TV series named \"Sky Radio\"?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "question": "Find the number of cartoons directed by each of the listed directors.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "question": "How many cartoons did each director create?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "question": "Find the production code and channel of the most recently aired cartoon .", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "question": "What is the produdction code and channel of the most recent cartoon ?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "question": "Find the package choice and series name of the TV channel that has high definition TV.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "question": "which countries' tv channels are playing some cartoon written by Todd Casey?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "question": "What are the countries that have cartoons on TV that were written by Todd Casey?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "question": "What are the countries that are not playing cartoons written by Todd Casey?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "question": "find id of the tv channels that from the countries where have more than two tv channels.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "question": "What are the ids of all tv channels that have more than 2 TV channels?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["TV_Channel", "TV_series", "Cartoon"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "column_name": ["*", "id", "series_name", "Country", "Language", "Content", "Pixel_aspect_ratio_PAR", "Hight_definition_TV", "Pay_per_view_PPV", "Package_Option", "id", "Episode", "Air_Date", "Rating", "Share", "18_49_Rating_Share", "Viewers_m", "Weekly_Rank", "Channel", "id", "Title", "Directed_by", "Written_by", "Original_air_date", "Production_code", "Channel"]}, "db_column_types": ["text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text"], "db_primary_keys": {"column_id": [1, 10, 19]}, "db_foreign_keys": {"column_id": [18, 25], "other_column_id": [1, 1]}}
{"query": "SELECT count(*) FROM poker_player", "question": "How many poker players are there?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT count(*) FROM poker_player", "question": "Count the number of poker players.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "question": "List the earnings of poker players in descending order.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "question": "What are the earnings of poker players, ordered descending by value?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "question": "List the final tables made and the best finishes of poker players.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "question": "What are the final tables made and best finishes for all poker players?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT avg(Earnings) FROM poker_player", "question": "What is the average earnings of poker players?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT avg(Earnings) FROM poker_player", "question": "Return the average earnings across all poker players.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "question": "What is the money rank of the poker player with the highest earnings?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "question": "Return the money rank of the player with the greatest earnings.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "question": "Return the maximum final tables made across all poker players who have earnings below 200000.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "question": "What are the names of poker players?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "question": "Return the names of all the poker players.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "question": "What are the names of poker players whose earnings is higher than 300000?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "question": "Give the names of poker players who have earnings above 300000.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "question": "List the names of poker players ordered by the final tables made in ascending order.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "question": "What is the birth date of the poker player with the lowest earnings?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "question": "Return the birth date of the poker player with the lowest earnings.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "question": "What is the money rank of the tallest poker player?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "question": "Return the money rank of the poker player with the greatest height.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "question": "What is the average earnings of poker players with height higher than 200?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "question": "Give average earnings of poker players who are taller than 200.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "question": "What are the names of poker players in descending order of earnings?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "question": "Return the names of poker players sorted by their earnings descending.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "question": "What are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "question": "How many people are there of each nationality?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is the most common nationality of people?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "question": "Give the nationality that is most common across all people.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "question": "What are the nationalities that are shared by at least two people?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "question": "Return the nationalities for which there are two or more people.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "question": "List the names and birth dates of people in ascending alphabetical order of name.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "question": "Show names of people whose nationality is not \"Russia\".", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "question": "What are the names of people who are not from Russia?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "question": "List the names of people that are not poker players.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "question": "What are the names of people who do not play poker?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT count(DISTINCT Nationality) FROM people", "question": "How many distinct nationalities are there?", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT count(DISTINCT Nationality) FROM people", "question": "Count the number of different nationalities.", "db_id": "poker_player", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["poker_player", "people"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Poker_Player_ID", "People_ID", "Final_Table_Made", "Best_Finish", "Money_Rank", "Earnings", "People_ID", "Nationality", "Name", "Birth_Date", "Height"]}, "db_column_types": ["text", "number", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 7]}, "db_foreign_keys": {"column_id": [2], "other_column_id": [7]}}
{"query": "SELECT count(*) FROM area_code_state", "question": "How many states are there?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "question": "List the contestant numbers and names, ordered by contestant name descending.", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT vote_id ,  phone_number ,  state FROM votes", "question": "List the vote ids, phone numbers and states of all votes.", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "question": "What are the maximum and minimum values of area codes?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT max(created) FROM votes WHERE state  =  'CA'", "question": "What is last date created of votes from the state 'CA'?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "question": "What are the names of the contestants whose names are not 'Jessie Alloway'", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT DISTINCT state ,  created FROM votes", "question": "What are the distinct states and create time of all votes?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "question": "What are the contestant numbers and names of the contestants who had at least two votes?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "question": "What are the number of votes from state 'NY' or 'CA'?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "question": "How many contestants did not get voted?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "question": "What is the area code in which the most voters voted?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "select contestant_name from contestants where contestant_name like \"%al%\"", "question": "Return the names of the contestants whose names contain the substring 'Al' .", "db_id": "voter_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["AREA_CODE_STATE", "CONTESTANTS", "VOTES"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 2], "column_name": ["*", "area_code", "state", "contestant_number", "contestant_name", "vote_id", "phone_number", "state", "contestant_number", "created"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "time"], "db_primary_keys": {"column_id": [1, 3, 5]}, "db_foreign_keys": {"column_id": [8, 7], "other_column_id": [3, 2]}}
{"query": "SELECT Name FROM country WHERE IndepYear  >  1950", "question": "What are the names of all the countries that became independent after 1950?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE IndepYear  >  1950", "question": "Give the names of the nations that were founded after 1950.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "question": "How many countries have a republic as their form of government?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "question": "How many countries have governments that are republics?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "question": "What is the total surface area of the countries in the Caribbean region?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"", "question": "How much surface area do the countires in the Carribean cover together?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "question": "Which continent is Anguilla in?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "question": "What is the continent name which Anguilla belongs to?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "question": "Which region is the city Kabul located in?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"", "question": "What region is Kabul in?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "question": "Which language is the most popular in Aruba?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1", "question": "What language is predominantly spoken in Aruba?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "question": "What are the population and life expectancies in Brazil?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "question": "Give me Brazil\u2019s population and life expectancies.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "question": "What are the region and population of Angola?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"", "question": "What region does Angola belong to and what is its population?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "question": "What is the average expected life expectancy for countries in the region of Central Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "question": "How long is the people\u2019s average life expectancy in Central Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "question": "What is the name of country that has the shortest life expectancy in Asia?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "question": "Give the name of the country in Asia with the lowest life expectancy.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "question": "What is the total population and maximum GNP in Asia?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "question": "How many people live in Asia, and what is the largest GNP among them?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "question": "What is the average life expectancy in African countries that are republics?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "question": "Give the average life expectancy for countries in Africa which are republics?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "question": "What is the total surface area of the continents Asia and Europe?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "question": "Give the total surface area covered by countries in Asia or Europe.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "question": "How many people live in Gelderland district?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "question": "What is the total population of Gelderland district?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "question": "What is the average GNP and total population in all nations whose government is US territory?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "question": "Give the mean GNP and total population of nations which are considered US territory.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "question": "How many unique languages are spoken in the world?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage", "question": "What is the number of distinct languages used around the world?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "question": "How many type of governments are in Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"", "question": "How many different forms of governments are there in Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "question": "What is the total number of languages used in Aruba?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "question": "How many languages are spoken in Aruba?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "question": "How many official languages does Afghanistan have?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"", "question": "How many official languages are spoken in Afghanistan?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is name of the country that speaks the largest number of languages?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "question": "Give the name of the nation that uses the greatest amount of languages.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "question": "Which continent has the most diverse languages?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "question": "Which continent speaks the most languages?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "question": "How many countries speak both English and Dutch?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")", "question": "What is the number of nations that use English and Dutch?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "question": "What are the names of nations speak both English and French?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "question": "Give the names of nations that speak both English and French.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "question": "What are the names of nations where both English and French are official languages?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "question": "Give the names of countries with English and French as official languages.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "question": "What is the number of distinct continents where Chinese is spoken?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"", "question": "How many continents speak Chinese?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "question": "What are the regions that use English or Dutch?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "question": "Which regions speak Dutch or English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"", "question": "What are the countries where either English or Dutch is the official language ?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"", "question": "Which countries have either English or Dutch as an official language?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "question": "Which language is the most popular on the Asian continent?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1", "question": "What is the language that is used by the largest number of Asian nations?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "question": "Which languages are spoken by only one country in republic governments?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1", "question": "What languages are only used by a single country with a republic government?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "question": "Find the city with the largest population that uses English.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "question": "What is the most populace city that speaks English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "question": "Find the name, population and expected life length of asian country with the largest area?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "question": "What are the name, population, and life expectancy of the largest Asian country by land?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "question": "What is average life expectancy in the countries where English is not the official language?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "question": "Give the mean life expectancy of countries in which English is not the official language.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "question": "What is the total number of people living in the nations that do not use English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "question": "How many people live in countries that do not speak English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "question": "What is the official language spoken in the country whose head of state is Beatrix?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "question": "What is the official language used in the country the name of whose head of state is Beatrix.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "question": "For the countries founded before 1930, what is the total number of distinct official languages?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "question": "What are the countries that have greater surface area than any country in Europe?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "question": "Which countries have greater area than that of any country in Europe?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "question": "What are the African countries that have a  population less than any country in Asia?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")", "question": "Which African countries have a smaller population than that of any country in Asia?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")", "question": "Which Asian countries have a population that is larger than any country in Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "question": "What are the Asian countries which have a population larger than that of any country in Africa?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "question": "What are the country codes for countries that do not speak English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "question": "Return the country codes for countries that do not speak English.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "question": "What are the country codes of countries where people use languages other than English?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "question": "Give the country codes for countries in which people speak langauges that are not English.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "question": "Return the codes of countries that do not speak English and do not have Republics for governments.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "question": "Which cities are in European countries where English is not the official language?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "question": "What are the names of cities in Europe for which English is not the official language?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"", "question": "Which unique cities are in Asian countries where Chinese is the official language ?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"", "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "question": "What are the name, independence year, and surface area of the country with the smallest population?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "question": "Give the name, year of independence, and surface area of the country that has the lowest population.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "question": "What are the population, name and leader of the country with the largest area?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1", "question": "Give the name, population, and head of state for the country that has the largest area.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "question": "Find the number of cities in each district whose population is greater than the average population of cities?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "question": "How many cities in each district have a population that is above the average population across all cities?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72", "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72", "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "question": "What are the names and areas of countries with the top 5 largest area?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5", "question": "Return the names and surface areas of the 5 largest countries.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "question": "What are names of countries with the top 3 largest population?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "question": "Return the names of the 3 most populated countries.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "question": "What are the names of the nations with the 3 lowest populations?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3", "question": "Return the names of the 3 countries with the fewest people.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "question": "how many countries are in Asia?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "question": "Count the number of countries in Asia.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "question": "Give the names of countries that are in Europe and have a population equal to 80000.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000", "question": "What are the cities whose population is between 160000 and 900000?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "select name from city where population between 160000 and 900000", "question": "Return the names of cities that have a population between 160000 and 900000 .", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "question": "Which language is spoken by the largest number of countries?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "question": "Give the language that is spoken in the most countries.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "question": "What is the language spoken by the largest percentage of people in each country?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "question": "Count the number of countries for which Spanish is the predominantly spoken language.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "question": "Return the codes of countries for which Spanish is the predominantly spoken language.", "db_id": "world_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["city", "sqlite_sequence", "country", "countrylanguage"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3], "column_name": ["*", "ID", "Name", "CountryCode", "District", "Population", "name", "seq", "Code", "Name", "Continent", "Region", "SurfaceArea", "IndepYear", "Population", "LifeExpectancy", "GNP", "GNPOld", "LocalName", "GovernmentForm", "HeadOfState", "Capital", "Code2", "CountryCode", "Language", "IsOfficial", "Percentage"]}, "db_column_types": ["text", "number", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "number", "number", "number", "number", "number", "number", "text", "text", "text", "number", "text", "text", "text", "text", "number"], "db_primary_keys": {"column_id": [1, 8, 23]}, "db_foreign_keys": {"column_id": [3, 23], "other_column_id": [8, 8]}}
{"query": "SELECT count(*) FROM conductor", "question": "How many conductors are there?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT count(*) FROM conductor", "question": "Count the number of conductors.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Age ASC", "question": "List the names of conductors in ascending order of age.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Age ASC", "question": "What are the names of conductors, ordered by age?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "question": "What are the names of conductors whose nationalities are not \"USA\"?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "question": "Return the names of conductors that do not have the nationality \"USA\".", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "question": "What are the record companies of orchestras in descending order of years in which they were founded?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT avg(Attendance) FROM SHOW", "question": "What is the average attendance of shows?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT avg(Attendance) FROM SHOW", "question": "Return the average attendance across all shows.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT count(DISTINCT Nationality) FROM conductor", "question": "How many different nationalities do conductors have?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT count(DISTINCT Nationality) FROM conductor", "question": "Count the number of different nationalities of conductors.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "question": "List names of conductors in descending order of years of work.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "question": "What are the names of conductors, sorted descending by the number of years they have worked?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "question": "List the name of the conductor with the most years of work.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "question": "What is the name of the conductor who has worked the greatest number of years?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "question": "Show the names of conductors and the orchestras they have conducted.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "question": "Show the names of conductors that have conducted more than one orchestras.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "question": "What are the names of conductors who have conducted at more than one orchestra?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "question": "Show the name of the conductor that has conducted the most number of orchestras.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is the name of the conductor who has conducted the most orchestras?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "question": "Please show the different record companies and the corresponding number of orchestras.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "question": "How many orchestras does each record company manage?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "question": "Please show the record formats of orchestras in ascending order of count.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "question": "What are the major record formats of orchestras, sorted by their frequency?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "question": "List the record company shared by the most number of orchestras.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is the record company used by the greatest number of orchestras?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "question": "List the names of orchestras that have no performance.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "question": "What are the orchestras that do not have any performances?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "question": "Count the number of orchestras that have CD or DVD as their record format.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "question": "Show the years in which orchestras that have given more than one performance are founded.", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "question": "What are years of founding for orchestras that have had more than a single performance?", "db_id": "orchestra", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["conductor", "orchestra", "performance", "show"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3], "column_name": ["*", "Conductor_ID", "Name", "Age", "Nationality", "Year_of_Work", "Orchestra_ID", "Orchestra", "Conductor_ID", "Record_Company", "Year_of_Founded", "Major_Record_Format", "Performance_ID", "Orchestra_ID", "Type", "Date", "Official_ratings_(millions)", "Weekly_rank", "Share", "Show_ID", "Performance_ID", "If_first_show", "Result", "Attendance"]}, "db_column_types": ["text", "number", "text", "number", "text", "number", "number", "text", "number", "text", "number", "text", "number", "number", "text", "text", "number", "text", "text", "number", "number", "others", "text", "number"], "db_primary_keys": {"column_id": [1, 6, 12]}, "db_foreign_keys": {"column_id": [8, 13, 20], "other_column_id": [1, 6, 12]}}
{"query": "SELECT count(*) FROM Highschooler", "question": "How many high schoolers are there?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Highschooler", "question": "Count the number of high schoolers.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name ,  grade FROM Highschooler", "question": "Show the names and grades of each high schooler.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name ,  grade FROM Highschooler", "question": "What are the names and grades for each high schooler?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler", "question": "Show all the grades of the high schoolers.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler", "question": "What is the grade of each high schooler?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "question": "What grade is Kyle in?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "question": "Return the grade for the high schooler named Kyle.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name FROM Highschooler WHERE grade  =  10", "question": "Show the names of all high schoolers in grade 10.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name FROM Highschooler WHERE grade  =  10", "question": "What are the names of all high schoolers in grade 10?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "question": "Show the ID of the high schooler named Kyle.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "question": "What is Kyle's id?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "question": "How many high schoolers are there in grade 9 or 10?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "question": "Count the number of high schoolers in grades 9 or 10.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "question": "Show the number of high schoolers for each grade.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "question": "How many high schoolers are in each grade?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "question": "Which grade has the most high schoolers?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "question": "Return the grade that has the greatest number of high schoolers.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "question": "Show me all grades that have at least 4 students.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "question": "Which grades have 4 or more high schoolers?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "question": "Show the student IDs and numbers of friends corresponding to each.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "question": "How many friends does each student have?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "question": "Show the names of high school students and their corresponding number of friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "question": "What are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the high schooler who has the greatest number of friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "Return the name of the high school student with the most friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "question": "Show the names of high schoolers who have at least 3 friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "question": "What are the names of high schoolers who have 3 or more friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "question": "Show the names of all of the high schooler Kyle's friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "question": "Return the names of friends of the high school student Kyle.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "question": "How many friends does the high school student Kyle have?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "question": "Count the number of friends Kyle has.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "question": "Show ids of all students who do not have any friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "question": "What are the ids of high school students who do not have friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "question": "Show names of all high school students who do not have any friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "question": "What are the names of students who have no friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "question": "Show the ids of high schoolers who have friends and are also liked by someone else.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "question": "What are the ids of students who both have friends and are liked?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "question": "Show name of all students who have some friends and also are liked by someone else.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "question": "What are the names of high schoolers who both have friends and are liked?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "question": "Count the number of likes for each student id.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "question": "How many likes correspond to each student id?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "question": "Show the names of high schoolers who have likes, and numbers of likes for each.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "question": "What are the names of high schoolers who have likes, and how many likes does each have?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the high schooler who has the greatest number of likes?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "question": "Give the name of the student with the most likes.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "question": "Show the names of students who have at least 2 likes.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "question": "What are the names of students who have 2 or more likes?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "question": "How many likes does Kyle have?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "question": "Return the number of likes that the high schooler named Kyle has.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "question": "Find the average grade of all students who have some friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "question": "What is the average grade of students who have friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "question": "Find the minimum grade of students who have no friends.", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "question": "What is the lowest grade of students who do not have any friends?", "db_id": "network_1", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Highschooler", "Friend", "Likes"], "db_column_names": {"table_id": [-1, 0, 0, 0, 1, 1, 2, 2], "column_name": ["*", "ID", "name", "grade", "student_id", "friend_id", "student_id", "liked_id"]}, "db_column_types": ["text", "number", "text", "number", "number", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 4, 6]}, "db_foreign_keys": {"column_id": [5, 4, 6, 7], "other_column_id": [1, 1, 1, 1]}}
{"query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "question": "Which states have both owners and professionals living there?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "question": "Find the states where both owners and professionals live.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "question": "What is the average age of the dogs who have gone through any treatments?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "question": "Find the average age of the dogs who went through treatments.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "question": "Which first names are used for professionals or owners but are not used as dog names?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "question": "Find the first names that are used for professionals or owners but are not used as dog names.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "question": "Which owner owns the most dogs? List the owner id, first name and last name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "question": "Return the owner id, first name and last name of the owner who has the most dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "question": "What is the name of the breed with the most dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "question": "Which breed do the most dogs have? Give me the breed name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "question": "What is the description of the treatment type that costs the least money in total?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "question": "Give me the description of the treatment type whose total cost is the lowest.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "question": "What are the first name and last name of the professionals who have done treatment with cost below average?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "question": "List the date of each treatment, together with the first name of the professional who operated it.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "question": "What are the date and the operating professional's first name of each treatment?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "question": "List the cost of each treatment and the corresponding treatment type description.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "question": "What are the cost and treatment type description of each treatment?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "question": "List each owner's first name, last name, and the size of his for her dog.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "question": "What are each owner's first name, last name, and the size of their dog?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "question": "List pairs of the owner's first name and the dogs's name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "question": "What are each owner's first name and their dogs's name?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "question": "List the names of the dogs of the rarest breed and the treatment dates of them.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "question": "Which dogs are of the rarest breed? Show their names and treatment dates.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "question": "Find the first names of owners living in Virginia and the names of dogs they own.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "question": "Find the arriving date and the departing date of the dogs that received a treatment.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "question": "List the last name of the owner owning the youngest dog.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "question": "Who owns the youngest dog? Give me his or her last name.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT date_arrived ,  date_departed FROM Dogs", "question": "What are the arriving date and the departing date of all the dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT date_arrived ,  date_departed FROM Dogs", "question": "List the arrival date and the departure date for all the dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(DISTINCT dog_id) FROM Treatments", "question": "How many dogs went through any treatments?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(DISTINCT dog_id) FROM Treatments", "question": "Count the number of dogs that went through a treatment.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(DISTINCT professional_id) FROM Treatments", "question": "How many professionals have performed any treatment to dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(DISTINCT professional_id) FROM Treatments", "question": "Find the number of professionals who have ever treated dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "question": "How many dogs have an age below the average?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "question": "Count the number of dogs of an age below the average.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "question": "How much does the most recent treatment cost?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "question": "Show me the cost of the most recently performed treatment.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "question": "How many dogs have not gone through any treatment?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "question": "Tell me the number of dogs that have not received any treatment .", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "question": "How many owners temporarily do not have any dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "question": "Find the number of owners who do not own any dogs at this moment.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "question": "How many professionals did not operate any treatment on dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "question": "Find the number of professionals who have not treated any dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT avg(age) FROM Dogs", "question": "What is the average age of all the dogs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT avg(age) FROM Dogs", "question": "Compute the average age of all the dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT max(age) FROM Dogs", "question": "What is the age of the oldest dog?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT max(age) FROM Dogs", "question": "Tell me the age of the oldest dog.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT charge_type ,  charge_amount FROM Charges", "question": "How much does each charge type costs? List both charge type and amount.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT charge_type ,  charge_amount FROM Charges", "question": "List each charge type and its amount.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT max(charge_amount) FROM Charges", "question": "How much does the most expensive charge type costs?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT max(charge_amount) FROM Charges", "question": "What is the charge amount of the most expensive charge type?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "question": "List the email, cell phone and home phone of all the professionals.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "question": "What are the email, cell phone and home phone of each professional?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "question": "What are all the possible breed type and size type combinations?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "question": "Find the distinct breed type and size type combinations for dogs.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "question": "List the first name of all the professionals along with the description of the treatment they have done.", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "question": "What are each professional's first name and description of the treatment they have performed?", "db_id": "dog_kennels", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Breeds", "Charges", "Sizes", "Treatment_Types", "Owners", "Dogs", "Professionals", "Treatments"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7], "column_name": ["*", "breed_code", "breed_name", "charge_id", "charge_type", "charge_amount", "size_code", "size_description", "treatment_type_code", "treatment_type_description", "owner_id", "first_name", "last_name", "street", "city", "state", "zip_code", "email_address", "home_phone", "cell_number", "dog_id", "owner_id", "abandoned_yn", "breed_code", "size_code", "name", "age", "date_of_birth", "gender", "weight", "date_arrived", "date_adopted", "date_departed", "professional_id", "role_code", "first_name", "street", "city", "state", "zip_code", "last_name", "email_address", "home_phone", "cell_number", "treatment_id", "dog_id", "professional_id", "treatment_type_code", "date_of_treatment", "cost_of_treatment"]}, "db_column_types": ["text", "text", "text", "number", "text", "number", "text", "text", "text", "text", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text", "text", "text", "text", "text", "time", "text", "text", "time", "time", "time", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "number", "text", "time", "number"], "db_primary_keys": {"column_id": [1, 3, 6, 8, 10, 20, 33, 44]}, "db_foreign_keys": {"column_id": [21, 21, 24, 23, 45, 46, 47], "other_column_id": [10, 10, 6, 1, 20, 33, 8]}}
{"query": "SELECT count(*) FROM singer", "question": "How many singers are there?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT count(*) FROM singer", "question": "What is the count of singers?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "question": "List the name of singers in ascending order of net worth.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "question": "What are the names of singers ordered by ascending net worth?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Birth_Year ,  Citizenship FROM singer", "question": "What are the birth year and citizenship of singers?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Birth_Year ,  Citizenship FROM singer", "question": "What are the birth years and citizenships of the singers?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "question": "List the name of singers whose citizenship is not \"France\".", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "question": "What are the names of the singers who are not French citizens?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "question": "Show the name of singers whose birth year is either 1948 or 1949?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "question": "What are the names of the singers whose birth years are either 1948 or 1949?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "question": "What is the name of the singer with the largest net worth?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "question": "What is the name of the singer who is worth the most?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "question": "Show different citizenship of singers and the number of singers of each citizenship.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "question": "For each citizenship, how many singers are from that country?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "question": "Please show the most common citizenship of singers.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "select citizenship from singer group by citizenship order by count(*) desc limit 1", "question": "What is the most common singer citizenship ?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "question": "Show different citizenships and the maximum net worth of singers of each citizenship.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "question": "For each citizenship, what is the maximum net worth?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "question": "Show titles of songs and names of singers.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "question": "What are the song titles and singer names?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "question": "Show distinct names of singers that have songs with sales more than 300000.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "question": "what are the different names of the singers that have sales more than 300000?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "question": "Show the names of singers that have more than one song.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "question": "What are the names of the singers that have more than one songs?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "question": "Show the names of singers and the total sales of their songs.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "question": "For each singer name, what is the total sales for their songs?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "question": "List the name of singers that do not have any song.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "question": "What is the sname of every sing that does not have any song?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "db_id": "singer", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["singer", "song"], "db_column_names": {"table_id": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "column_name": ["*", "Singer_ID", "Name", "Birth_Year", "Net_Worth_Millions", "Citizenship", "Song_ID", "Title", "Singer_ID", "Sales", "Highest_Position"]}, "db_column_types": ["text", "number", "text", "number", "number", "text", "number", "text", "number", "number", "number"], "db_primary_keys": {"column_id": [1, 6]}, "db_foreign_keys": {"column_id": [8], "other_column_id": [1]}}
{"query": "SELECT count(*) FROM Other_Available_Features", "question": "How many available features are there in total?", "db_id": "real_estate_properties", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Feature_Types", "Ref_Property_Types", "Other_Available_Features", "Properties", "Other_Property_Features"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4], "column_name": ["*", "feature_type_code", "feature_type_name", "property_type_code", "property_type_description", "feature_id", "feature_type_code", "feature_name", "feature_description", "property_id", "property_type_code", "date_on_market", "date_sold", "property_name", "property_address", "room_count", "vendor_requested_price", "buyer_offered_price", "agreed_selling_price", "apt_feature_1", "apt_feature_2", "apt_feature_3", "fld_feature_1", "fld_feature_2", "fld_feature_3", "hse_feature_1", "hse_feature_2", "hse_feature_3", "oth_feature_1", "oth_feature_2", "oth_feature_3", "shp_feature_1", "shp_feature_2", "shp_feature_3", "other_property_details", "property_id", "feature_id", "property_feature_description"]}, "db_column_types": ["text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "time", "time", "text", "text", "number", "number", "number", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 3, 5, 9]}, "db_foreign_keys": {"column_id": [6, 10, 35, 36], "other_column_id": [1, 3, 9, 5]}}
{"query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "question": "What is the feature type name of feature AirCon?", "db_id": "real_estate_properties", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Feature_Types", "Ref_Property_Types", "Other_Available_Features", "Properties", "Other_Property_Features"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4], "column_name": ["*", "feature_type_code", "feature_type_name", "property_type_code", "property_type_description", "feature_id", "feature_type_code", "feature_name", "feature_description", "property_id", "property_type_code", "date_on_market", "date_sold", "property_name", "property_address", "room_count", "vendor_requested_price", "buyer_offered_price", "agreed_selling_price", "apt_feature_1", "apt_feature_2", "apt_feature_3", "fld_feature_1", "fld_feature_2", "fld_feature_3", "hse_feature_1", "hse_feature_2", "hse_feature_3", "oth_feature_1", "oth_feature_2", "oth_feature_3", "shp_feature_1", "shp_feature_2", "shp_feature_3", "other_property_details", "property_id", "feature_id", "property_feature_description"]}, "db_column_types": ["text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "time", "time", "text", "text", "number", "number", "number", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 3, 5, 9]}, "db_foreign_keys": {"column_id": [6, 10, 35, 36], "other_column_id": [1, 3, 9, 5]}}
{"query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "question": "Show the property type descriptions of properties belonging to that code.", "db_id": "real_estate_properties", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Feature_Types", "Ref_Property_Types", "Other_Available_Features", "Properties", "Other_Property_Features"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4], "column_name": ["*", "feature_type_code", "feature_type_name", "property_type_code", "property_type_description", "feature_id", "feature_type_code", "feature_name", "feature_description", "property_id", "property_type_code", "date_on_market", "date_sold", "property_name", "property_address", "room_count", "vendor_requested_price", "buyer_offered_price", "agreed_selling_price", "apt_feature_1", "apt_feature_2", "apt_feature_3", "fld_feature_1", "fld_feature_2", "fld_feature_3", "hse_feature_1", "hse_feature_2", "hse_feature_3", "oth_feature_1", "oth_feature_2", "oth_feature_3", "shp_feature_1", "shp_feature_2", "shp_feature_3", "other_property_details", "property_id", "feature_id", "property_feature_description"]}, "db_column_types": ["text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "time", "time", "text", "text", "number", "number", "number", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 3, 5, 9]}, "db_foreign_keys": {"column_id": [6, 10, 35, 36], "other_column_id": [1, 3, 9, 5]}}
{"query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1", "question": "What are the names of properties that are either houses or apartments with more than 1 room?", "db_id": "real_estate_properties", "db_path": "/mnt/lustre/yejiacheng/.cache/huggingface/datasets/downloads/extracted/8fe2e046076bdbe19da0b7efd34286fcce584c540496f449083439f197555ce4/spider/database", "db_table_names": ["Ref_Feature_Types", "Ref_Property_Types", "Other_Available_Features", "Properties", "Other_Property_Features"], "db_column_names": {"table_id": [-1, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4], "column_name": ["*", "feature_type_code", "feature_type_name", "property_type_code", "property_type_description", "feature_id", "feature_type_code", "feature_name", "feature_description", "property_id", "property_type_code", "date_on_market", "date_sold", "property_name", "property_address", "room_count", "vendor_requested_price", "buyer_offered_price", "agreed_selling_price", "apt_feature_1", "apt_feature_2", "apt_feature_3", "fld_feature_1", "fld_feature_2", "fld_feature_3", "hse_feature_1", "hse_feature_2", "hse_feature_3", "oth_feature_1", "oth_feature_2", "oth_feature_3", "shp_feature_1", "shp_feature_2", "shp_feature_3", "other_property_details", "property_id", "feature_id", "property_feature_description"]}, "db_column_types": ["text", "text", "text", "text", "text", "number", "text", "text", "text", "number", "text", "time", "time", "text", "text", "number", "number", "number", "number", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "text", "number", "number", "text"], "db_primary_keys": {"column_id": [1, 3, 5, 9]}, "db_foreign_keys": {"column_id": [6, 10, 35, 36], "other_column_id": [1, 3, 9, 5]}}
